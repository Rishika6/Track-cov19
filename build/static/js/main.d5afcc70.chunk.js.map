{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifieddata","fetchDailyData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5afcc70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3hZCs\",\"card\":\"Cards_card__2D3fK\",\"infected\":\"Cards_infected__IFFzy\",\"recovered\":\"Cards_recovered__WRVGj\",\"deaths\":\"Cards_deaths__HaX62\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction Cards({data:{confirmed,recovered,deaths,lastUpdate}}){\r\n    if(!confirmed){\r\n        return \"LODING..\"\r\n    }\r\n    //console.log(props)\r\n    return (\r\n        <div className={styles.container}>\r\n           <Grid container spacing={4} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.Card,styles.infected)} >\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                           INFECTED\r\n                       </Typography>\r\n                       <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of people infected due to COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.Card,styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                           RECOVERED\r\n                       </Typography>\r\n                       <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2} separator=\",\"/></Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of people recovered from COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n            \r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.Card,styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                           DEATHS\r\n                       </Typography>\r\n                       <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2} separator=\",\"/></Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of people died due to COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards","import axios from 'axios';\r\n\r\nconst url=\" https://covid19.mathdro.id/api\";\r\nexport const fetchData=async(country)=>{\r\n    let changeableUrl=url\r\n    if(country)\r\n    changeableUrl=`${url}/countries/${country}`\r\n    try{\r\n      const {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(changeableUrl);\r\n      const modifieddata={\r\n          confirmed:confirmed,\r\n          recovered:recovered,\r\n          deaths:deaths,\r\n          lastUpdate:lastUpdate\r\n\r\n      }\r\n       return modifieddata;\r\n    }catch(error){\r\n\r\n    }\r\n}\r\nexport const fetchDailyData=async()=>{\r\n    try{\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        const modifieddata=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));\r\n        return modifieddata;\r\n    }\r\n    catch(error)\r\n    {\r\n         console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n      const {data:{countries}}=await axios.get(`${url}/countries`);\r\n      return countries.map((country)=>country.name);\r\n    }\r\n    catch(error)\r\n    {\r\n\r\n    }\r\n}\r\n","import React, { useEffect ,useState} from 'react';\r\nimport {fetchDailyData} from '../../api/index'\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart=({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailyData,setDailyData]=useState([]);\r\n    useEffect(()=>{\r\n          const fetchAPI=async()=>{\r\n              setDailyData(await fetchDailyData());\r\n          }\r\n\r\n          fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length!==0?\r\n          <Line \r\n          data={{\r\n              labels:dailyData.map(({date})=>date),\r\n              datasets:[{\r\n                  data:dailyData.map(({confirmed})=>confirmed),\r\n                  label:'Infected',\r\n                  borderColor:\"#3333ff\",\r\n                  fill:true,\r\n\r\n              },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:\"red\",\r\n                backgroundColor:\"rgba(255,0,0,0.5)\",\r\n                fill:true,\r\n\r\n              }]\r\n          }}\r\n        />:\r\n        null\r\n        \r\n\r\n    );\r\n\r\n    const barChart=(\r\n        confirmed?(\r\n            <Bar\r\n             data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['blue','green','red'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend:{display:false},\r\n                 title:{display:true,text:`Current state in ${country}`}\r\n             }}\r\n            />\r\n        ):null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart","import React, { useState,useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api/index';\r\nconst  CountryPicker=({handleCountryChange})=>{\r\n    const [fetchedCountries,setFetchedCountries]=useState([])\r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries])\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"global\">\r\n                    Global\r\n                </option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker","import React from 'react';\r\nimport {Cards,Chart,CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api/index';;\r\n\r\n\r\nclass App extends React.Component{\r\nstate={\r\n    data:{},\r\n    country:''\r\n}\r\n\r\n handleCountryChange=async (country)=>{\r\n   const fetchedData=await fetchData(country)\r\n   this.setState({data:fetchedData,country:country})\r\n}\r\n    async componentDidMount(){\r\n        const fetchedData=await fetchData();\r\n        this.setState({data:fetchedData})\r\n        //console.log(data);\r\n    }\r\n   render(){\r\n\r\n       const {data,country}=this.state;\r\n    return (\r\n    <div className={styles.container}>\r\n          \r\n           <Cards data={data}/>\r\n           <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n           <Chart data={data} country={country}/>\r\n        </div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__u-lzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1lZa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__25h4r\",\"image\":\"App_image__3ZCsN\"};"],"sourceRoot":""}